# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET
on:
 workflow_dispatch:
   inputs:
      generate-version:
        description: 'Generate and publish new version'
        required: true
        default: 'yes'
 push:
    branches: [ "main" ]
 pull_request:
    branches: [ "main" ]

jobs:
 build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Build
      run: dotnet build --configuration Release 
    - name: Test
      run: dotnet test /p:Configuration=Release --no-restore --no-build --verbosity normal
      
 generate-version:
    if: ${{ github.event.inputs.generate-version == 'yes' }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2

      - name: GitHub Tag Bump
        id: tab_bump
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.1.3
          DEFAULT_BUMP: patch

    outputs:
      if: ${{ github.event_name == 'workflow_dispatch' }}
      new_version: ${{ steps.tab_bump.outputs.new_tag }}

 package-and-publish:
    runs-on: windows-latest
    needs: generate-version

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          
      - name: Build the project
        run: |
         dotnet build --configuration Release
    
      - name: Run tests
        run: |
         dotnet test /p:Configuration=Release --no-restore --no-build --verbosity normal

      - name: Generate NuGet package
        run: |
          dotnet pack descarga-ciec-csharp --configuration Release -p:PackageVersion=${{ needs.generate-version.outputs.new_version }} -p:RepositoryUrl=https://github.com/ConroeSoluciones/descarga-ciec-csharp -o packages
   
      - name: List files in the packages directory
        run: dir ./packages 

      - name: Publish NuGet package
        run: |
         foreach($file in (Get-ChildItem ./packages -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEYS }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
